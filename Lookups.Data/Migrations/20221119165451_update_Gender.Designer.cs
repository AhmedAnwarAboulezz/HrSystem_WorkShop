// <auto-generated />
using System;
using Lookups.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lookups.Data.Migrations
{
    [DbContext(typeof(LookupsContext))]
    [Migration("20221119165451_update_Gender")]
    partial class update_Gender
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lookups.Data.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameFl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameSl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c60f693-bef5-e011-a485-80ee7300c695"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 917, DateTimeKind.Local).AddTicks(3094),
                            IsDelete = false,
                            NameFl = "Egypt",
                            NameSl = "مصر"
                        },
                        new
                        {
                            Id = new Guid("5c60f693-bef5-e011-a485-80ee7300c696"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 919, DateTimeKind.Local).AddTicks(2369),
                            IsDelete = false,
                            NameFl = "Kuwait",
                            NameSl = "الكويت"
                        },
                        new
                        {
                            Id = new Guid("5c60f693-bef5-e011-a485-90ee7300c695"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 919, DateTimeKind.Local).AddTicks(2432),
                            IsDelete = false,
                            NameFl = "Ksa",
                            NameSl = "السعودية"
                        },
                        new
                        {
                            Id = new Guid("5c60f693-bef5-e011-a485-82ee7300c695"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 919, DateTimeKind.Local).AddTicks(2442),
                            IsDelete = false,
                            NameFl = "UAE",
                            NameSl = "الأمارات"
                        },
                        new
                        {
                            Id = new Guid("5c60f693-bef5-e011-a485-84ee7300c695"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 919, DateTimeKind.Local).AddTicks(2448),
                            IsDelete = false,
                            NameFl = "Yamen",
                            NameSl = "اليمن"
                        },
                        new
                        {
                            Id = new Guid("5c60f693-bef5-e011-a485-86ee7300c695"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 919, DateTimeKind.Local).AddTicks(2467),
                            IsDelete = false,
                            NameFl = "Jordon",
                            NameSl = "الأردن"
                        });
                });

            modelBuilder.Entity("Lookups.Data.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameFl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameSl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Lookups.Data.Entities.EmployeeLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("SignInTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("SignOutTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkingMinutes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeeLogs");
                });

            modelBuilder.Entity("Lookups.Data.Entities.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShown")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameFl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameSl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1160f693-bef5-e011-a485-80ee7300c611"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 922, DateTimeKind.Local).AddTicks(5477),
                            IsDelete = false,
                            IsShown = true,
                            NameFl = "Male",
                            NameSl = "ذكر"
                        },
                        new
                        {
                            Id = new Guid("5160f693-bef5-e011-a485-80ee7300c612"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 924, DateTimeKind.Local).AddTicks(9354),
                            IsDelete = false,
                            IsShown = true,
                            NameFl = "Female",
                            NameSl = "أنثي"
                        },
                        new
                        {
                            Id = new Guid("2260f693-bef5-e011-a485-80ee7300c693"),
                            CreatedDate = new DateTime(2022, 11, 19, 18, 54, 50, 925, DateTimeKind.Local).AddTicks(327),
                            IsDelete = false,
                            IsShown = false,
                            NameFl = "Both",
                            NameSl = "كلاهما"
                        });
                });

            modelBuilder.Entity("Lookups.Data.Entities.Employee", b =>
                {
                    b.HasOne("Lookups.Data.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Lookups.Data.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Lookups.Data.Entities.Employee", "Manager")
                        .WithMany("Employees")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Country");

                    b.Navigation("Gender");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Lookups.Data.Entities.Employee", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
